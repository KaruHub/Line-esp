local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/jensonhirst/Orion/main/source')))()

-- Creating the Window
local Window = OrionLib:MakeWindow({
    Name = "Bridge Teleporter & ESP",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "OrionTest"
})

-- Create a Player tab
local PlayerTab = Window:MakeTab({
    Name = "Player",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Create a section in the Player Tab for ESP
local ESPSection = PlayerTab:AddSection({
    Name = "ESP Settings"
})

-- ESP functionality
local espEnabled = false
local espObjects = {}
local highlightColor = Color3.fromRGB(255, 0, 0)  -- Default red color for ESP

-- Function to create ESP
local function createESP(player)
    local character = player.Character
    if not character then return end
    local highlight = Instance.new("Highlight")
    highlight.FillColor, highlight.OutlineColor = highlightColor, highlightColor
    highlight.Parent = character
    local billboard = Instance.new("BillboardGui")
    billboard.Adornee = character:FindFirstChild("Head") or character:FindFirstChild("HumanoidRootPart")
    billboard.Size, billboard.StudsOffset = UDim2.new(0, 200, 0, 50), Vector3.new(0, 2, 0)
    billboard.AlwaysOnTop = true
    local nametag = Instance.new("TextLabel")
    nametag.Text, nametag.TextColor3 = player.Name, highlightColor
    nametag.Size, nametag.BackgroundTransparency = UDim2.new(1, 0, 1, 0), 1
    nametag.Parent = billboard
    billboard.Parent = character
    espObjects[player] = {highlight, billboard}
end

-- Function to remove ESP
local function removeESP(player)
    if espObjects[player] then
        for _, obj in pairs(espObjects[player]) do obj:Destroy() end
        espObjects[player] = nil
    end
end

-- Toggle ESP button
PlayerTab:AddToggle({
    Name = "Enable ESP",
    Default = false,
    Callback = function(Value)
        espEnabled = Value
        if espEnabled then
            for _, player in pairs(game.Players:GetPlayers()) do
                if player ~= game.Players.LocalPlayer then
                    createESP(player)
                end
            end
        else
            for _, player in pairs(game.Players:GetPlayers()) do
                removeESP(player)
            end
        end
    end
})

-- ESP Color Picker
PlayerTab:AddColorpicker({
    Name = "ESP Color",
    Default = Color3.fromRGB(255, 0, 0),
    Callback = function(Value)
        highlightColor = Value
        if espEnabled then
            for player, _ in pairs(espObjects) do
                removeESP(player)
                createESP(player)
            end
        end
    end
})

-- Create a Main Tab
local MainTab = Window:MakeTab({
    Name = "Main",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Main Section
local MainSection = MainTab:AddSection({
    Name = "Main Actions"
})

-- Get All Items Button
MainTab:AddButton({
    Name = "Get All Items",
    Callback = function()
        local remoteEvent = game.ReplicatedStorage:WaitForChild("SpawnGalaxyBlock")

        local function fireRemoteEvent()
            local duration = 3 -- Duration in seconds
            local interval = 0.001 -- Interval in seconds

            local endTime = tick() + duration
            while tick() < endTime do
                remoteEvent:FireServer()
                wait(interval)
            end
        end

        fireRemoteEvent()
    end
})

-- No Fall Toggle (Checkbox)
MainTab:AddToggle({
    Name = "Enable No Fall",
    Default = false,
    Callback = function(Value)
        if Value then
            -- Create the part for No Fall protection
            local part = Instance.new("Part")
            part.Size = Vector3.new(1000, 1, 1000)
            part.Position = Vector3.new(-948, 189, -86)
            part.Anchored = true
            part.BrickColor = BrickColor.Red()
            part.Material = Enum.Material.ForceField
            part.Reflectance = 1
            part.Transparency = 0
            part.Parent = game.Workspace
            part.Name = "NoFallPart"
        else
            -- Remove No Fall protection part
            local part = game.Workspace:FindFirstChild("NoFallPart")
            if part then part:Destroy() end
        end
    end
})

-- Create a Teleport Section
local TeleportSection = MainTab:AddSection({
    Name = "Teleport"
})

-- Bridge Teleport Dropdown
local bridgeNames = {"BlueBridge", "CyanBridge", "GreenBridge", "OrangeBridge", "PinkBridge", "PurpleBridge", "RedBridge", "YellowBridge"}

MainTab:AddDropdown({
    Name = "Select Bridge",
    Default = bridgeNames[1],  -- Default bridge
    Options = bridgeNames,
    Callback = function(selectedBridge)
        -- Teleport to the selected bridge
        local bridgeModel = game.Workspace:FindFirstChild(selectedBridge)
        if bridgeModel then
            local bridgePosition = bridgeModel.PrimaryPart and bridgeModel.PrimaryPart.Position or bridgeModel:GetModelCFrame().Position
            game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(bridgePosition))
        else
            warn(selectedBridge .. " not found in Workspace!")
        end
    end
})

-- Initialize the library
OrionLib:Init()
