local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/jensonhirst/Orion/main/source')))()

-- Player setup
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- ESP setup
local highlightColor = Color3.fromRGB(255, 0, 0) -- Default red
local refreshInterval = 3 -- Refresh every 3 seconds
local espEnabled = false -- Toggle state
local espObjects = {} -- Stores ESP objects

-- List of possible bridge model names (teleport to specific bridge from dropdown)
local bridgeNames = {"BlueBridge", "CyanBridge", "GreenBridge", "OrangeBridge", "PinkBridge", "PurpleBridge", "RedBridge", "YellowBridge"}

-- Function to create ESP
local function createESP(player)
    local character = player.Character
    if not character then return end
    local highlight = Instance.new("Highlight")
    highlight.FillColor, highlight.OutlineColor = highlightColor, highlightColor
    highlight.Parent = character
    local billboard = Instance.new("BillboardGui")
    billboard.Adornee = character:FindFirstChild("Head") or character:FindFirstChild("HumanoidRootPart")
    billboard.Size, billboard.StudsOffset = UDim2.new(0, 200, 0, 50), Vector3.new(0, 2, 0)
    billboard.AlwaysOnTop = true
    local nametag = Instance.new("TextLabel")
    nametag.Text, nametag.TextColor3 = player.Name, highlightColor
    nametag.Size, nametag.BackgroundTransparency = UDim2.new(1, 0, 1, 0), 1
    nametag.Parent = billboard
    billboard.Parent = character
    espObjects[player] = {highlight, billboard}
end

-- Function to remove ESP
local function removeESP(player)
    if espObjects[player] then
        for _, obj in pairs(espObjects[player]) do obj:Destroy() end
        espObjects[player] = nil
    end
end

-- Function to toggle ESP
local function toggleESP()
    espEnabled = not espEnabled
    for _, player in pairs(game.Players:GetPlayers()) do
        if player ~= game.Players.LocalPlayer then
            if espEnabled then createESP(player) else removeESP(player) end
        end
    end
end

-- Function to teleport to selected bridge
local function teleportToBridge(bridgeName)
    -- Find the model in Workspace
    local bridgeModel = game.Workspace:FindFirstChild(bridgeName)
    
    if bridgeModel then
        -- Get the position of the bridge model
        local bridgePosition = bridgeModel.PrimaryPart and bridgeModel.PrimaryPart.Position or bridgeModel:GetModelCFrame().Position
        
        -- Teleport the player's character to the bridge position
        character:SetPrimaryPartCFrame(CFrame.new(bridgePosition))
    else
        warn(bridgeName .. " not found in Workspace!")
    end
end

-- Create the OrionLib window
local Window = OrionLib:MakeWindow({
    Name = "Bridge Teleporter & ESP",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "OrionTest"
})

-- Create a Tab for the main section
local Tab = Window:MakeTab({
    Name = "Main",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Create a Section for the Get All Items button
Tab:AddSection({
    Name = "Actions"
})

-- Add a button to get all items
Tab:AddButton({
    Name = "Get All Items",
    Callback = function()
        local remoteEvent = game.ReplicatedStorage:WaitForChild("SpawnGalaxyBlock") -- Adjust to where your RemoteEvent is located
        
        local function fireRemoteEvent()
            local duration = 3 -- Duration in seconds
            local interval = 0.001 -- Interval in seconds

            local endTime = tick() + duration
            while tick() < endTime do
                remoteEvent:FireServer()
                wait(interval)
            end
        end

        fireRemoteEvent()
    end
})

-- Create a Section for the No Fall checkbox
Tab:AddSection({
    Name = "No Fall"
})

-- Add a checkbox for No Fall
Tab:AddCheckbox({
    Name = "Enable No Fall",
    Default = false,
    Callback = function(Value)
        if Value then
            -- Create the part for fall protection
            local part = Instance.new("Part")
            part.Size = Vector3.new(1000, 1, 1000) -- Set a normal height (1) but still make it extremely wide
            part.Position = Vector3.new(-948, 189, -86)  -- Set the position at X = -948, Y = 189, Z = -86
            part.Anchored = true  -- Anchor the part so it doesn't fall
            part.BrickColor = BrickColor.Red()  -- Set the BrickColor to ReallyRed
            part.Material = Enum.Material.ForceField  -- Set the material to ForceField
            part.Reflectance = 1  -- Set the reflectance to 1
            part.Transparency = 0  -- Set transparency to 0 (fully visible)
            part.Parent = game.Workspace  -- Parent the part to Workspace
        else
            -- If disabled, remove the part to allow falling again
            local part = game.Workspace:FindFirstChild("NoFallPart")
            if part then
                part:Destroy()
            end
        end
    end
})

-- Create the Player Tab for ESP
local PlayerTab = Window:MakeTab({
    Name = "Player",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Create a Section for ESP functionality
local SectionESP = PlayerTab:AddSection({
    Name = "ESP Section"
})

-- Add a Color Picker for the ESP color
PlayerTab:AddColorpicker({
    Name = "ESP Color Picker",
    Default = Color3.fromRGB(255, 0, 0),  -- Default to red
    Callback = function(Value)
        highlightColor = Value
        -- Refresh ESP
        if espEnabled then
            for player, _ in pairs(espObjects) do
                removeESP(player)
                createESP(player)
            end
        end
    end    
})

-- Add a Toggle to enable/disable ESP
PlayerTab:AddToggle({
    Name = "Enable ESP",
    Default = false,
    Callback = function(Value)
        espEnabled = Value
        for _, player in pairs(game.Players:GetPlayers()) do
            if player ~= game.Players.LocalPlayer then
                if espEnabled then createESP(player) else removeESP(player) end
            end
        end
    end
})

-- Create a Section for the Teleportation functionality
local SectionTP = PlayerTab:AddSection({
    Name = "Teleport Section"
})

-- Add a Dropdown menu to select a bridge
PlayerTab:AddDropdown({
    Name = "Select Bridge",
    Default = bridgeNames[1],  -- Default to the first bridge in the list
    Options = bridgeNames,  -- List of bridge names
    Callback = function(selectedBridge)
        -- Teleport to the selected bridge
        teleportToBridge(selectedBridge)
    end    
})

-- Initialize the OrionLib interface
OrionLib:Init()

-- Periodic refresh to update ESP
while true do
    wait(refreshInterval)
    if espEnabled then
        for player, _ in pairs(espObjects) do
            removeESP(player)
            createESP(player)
        end
    end
end
