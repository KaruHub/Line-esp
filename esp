-- Load Orion Library
local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/jensonhirst/Orion/main/source'))()

-- Wait for character to load
local player = game.Players.LocalPlayer
local function getCharacter()
    return player.Character or player.CharacterAdded:Wait()
end

-- Table storing bridge models
local bridges = {
    BlueBridge = game.Workspace:FindFirstChild("BlueBridge"),
    CyanBridge = game.Workspace:FindFirstChild("CyanBridge"),
    GreenBridge = game.Workspace:FindFirstChild("GreenBridge"),
    OrangeBridge = game.Workspace:FindFirstChild("OrangeBridge"),
    PinkBridge = game.Workspace:FindFirstChild("PinkBridge"),
    PurpleBridge = game.Workspace:FindFirstChild("PurpleBridge"),
    RedBridge = game.Workspace:FindFirstChild("RedBridge"),
    YellowBridge = game.Workspace:FindFirstChild("YellowBridge")
}

-- Function to teleport to a bridge
local function teleportToBridge(bridgeName)
    local character = getCharacter()
    local bridge = bridges[bridgeName]

    if bridge then
        local targetPosition = bridge:FindFirstChild("PrimaryPart") and bridge.PrimaryPart.Position or bridge:GetBoundingBox().Position
        character:MoveTo(targetPosition + Vector3.new(0, 5, 0)) -- Teleport slightly above the bridge
    else
        warn("Bridge not found: " .. tostring(bridgeName))
    end
end

-- Create Orion UI Window
local Window = OrionLib:MakeWindow({
    Name = "Bridge Teleporter & ESP",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "OrionBridgeTP"
})

-- Player Tab
local PlayerTab = Window:MakeTab({
    Name = "Player",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Player Section
local PlayerSection = PlayerTab:AddSection({
    Name = "Player Settings"
})

-- No Fall Checkbox
local part = Instance.new("Part")
part.Size = Vector3.new(1000, 1, 1000) -- Set a normal height (1) but still make it extremely wide
part.Position = Vector3.new(-948, 189, -86)  -- Set the position at X = -948, Y = 189, Z = -86
part.Anchored = true  -- Anchor the part so it doesn't fall
part.BrickColor = BrickColor.Red()  -- Set the BrickColor to ReallyRed
part.Material = Enum.Material.ForceField  -- Set the material to ForceField
part.Reflectance = 1  -- Set the reflectance to 1
part.Transparency = 1  -- Set transparency to 1 (invisible) by default
part.CanCollide = false  -- Disable collision by default
part.Parent = game.Workspace  -- Parent the part to Workspace

PlayerTab:AddToggle({
    Name = "No Fall",
    Default = false,
    Callback = function(State)
        part.Transparency = State and 0 or 1  -- Set transparency to 0 (visible) or 1 (invisible)
        part.CanCollide = State  -- Enable or disable collision
    end
})

-- Get All Items Button
PlayerTab:AddButton({
    Name = "Get All Items",
    Callback = function()
        local remoteEvent = game.ReplicatedStorage:WaitForChild("SpawnGalaxyBlock") -- Adjust to where your RemoteEvent is located

        local function fireRemoteEvent()
            local duration = 3 -- Duration in seconds
            local interval = 0.001 -- Interval in seconds

            local endTime = tick() + duration
            while tick() < endTime do
                remoteEvent:FireServer()
                wait(interval)
            end
        end

        fireRemoteEvent()
    end
})

-- WalkSpeed Slider
PlayerTab:AddSlider({
    Name = "WalkSpeed",
    Min = 16,
    Max = 1000,
    Default = 16,
    Increment = 1,
    Callback = function(Value)
        local character = getCharacter()
        if character and character:FindFirstChild("Humanoid") then
            character.Humanoid.WalkSpeed = Value
        else
            warn("Character or Humanoid not found!")
        end
    end
})

-- JumpPower Slider
PlayerTab:AddSlider({
    Name = "JumpPower",
    Min = 50,
    Max = 1000,
    Default = 50,
    Increment = 1,
    Callback = function(Value)
        local character = getCharacter()
        if character and character:FindFirstChild("Humanoid") then
            character.Humanoid.JumpPower = Value
        else
            warn("Character or Humanoid not found!")
        end
    end
})

-- Camera Max Zoom Distance Slider
PlayerTab:AddSlider({
    Name = "Max Zoom Distance",
    Min = 10,
    Max = 50000,
    Default = 400,
    Increment = 50,
    Callback = function(Value)
        game.Players.LocalPlayer.CameraMaxZoomDistance = Value
    end
})

-- Teleport to Center Button
PlayerTab:AddButton({
    Name = "Teleport to Center",
    Callback = function()
        local character = getCharacter()
        if character and character:FindFirstChild("HumanoidRootPart") then
            character.HumanoidRootPart.CFrame = CFrame.new(-1040, 201, 90)
        else
            warn("Character or HumanoidRootPart not found!")
        end
    end
})

-- ESP System
local espEnabled = false
local espColor = Color3.fromRGB(255, 0, 0)
local espRefreshRate = 3 -- Refresh every 3 seconds

local function createESP(player)
    if player ~= game.Players.LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local rootPart = player.Character.HumanoidRootPart
        local highlight = rootPart:FindFirstChild("Highlight")

        if not highlight then
            highlight = Instance.new("BoxHandleAdornment", rootPart)
            highlight.Name = "Highlight"
            highlight.Size = Vector3.new(4, 6, 4)
            highlight.Transparency = 0.5
            highlight.AlwaysOnTop = true
            highlight.ZIndex = 10
            highlight.Adornee = rootPart
            highlight.Color3 = espColor
        else
            highlight.Color3 = espColor
        end
    end
end

local function removeESP(player)
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local rootPart = player.Character.HumanoidRootPart
        local highlight = rootPart:FindFirstChild("Highlight")
        if highlight then
            highlight:Destroy()
        end
    end
end

local function updateESP()
    for _, player in pairs(game.Players:GetPlayers()) do
        if espEnabled then
            createESP(player)
        else
            removeESP(player)
        end
    end
end

PlayerTab:AddToggle({
    Name = "Enable ESP",
    Default = false,
    Callback = function(State)
        espEnabled = State
        if espEnabled then
            updateESP()
            while espEnabled do
                wait(espRefreshRate)
                updateESP()
            end
        else
            updateESP()
        end
    end
})

PlayerTab:AddColorpicker({
    Name = "ESP Color",
    Default = Color3.fromRGB(255, 0, 0),
    Callback = function(Value)
        espColor = Value
        if espEnabled then
            updateESP()
        end
    end
})

-- Bridges Dropdown
local teleportOnSelect = false -- Prevents teleportation on script load
PlayerTab:AddDropdown({
    Name = "Select a Bridge",
    Default = "BlueBridge",
    Options = {"BlueBridge", "CyanBridge", "GreenBridge", "OrangeBridge", "PinkBridge", "PurpleBridge", "RedBridge", "YellowBridge"},
    Callback = function(Value)
        if teleportOnSelect then
            teleportToBridge(Value)
        else
            teleportOnSelect = true -- Enable teleportation after the first selection
        end
    end
})

-- Others Tab
local OtherTab = Window:MakeTab({
    Name = "Others",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Infinite Yield Button
OtherTab:AddButton({
    Name = "Infinite Yield",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
    end
})

-- Dex Explorer Button
OtherTab:AddButton({
    Name = "Dex Explorer",
    Callback = function()
        loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Keyless-mobile-dex-17888"))()
    end
})

-- SimpleSpy Button
OtherTab:AddButton({
    Name = "SimpleSpy",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/78n/SimpleSpy/main/SimpleSpySource.lua"))()
    end
})

-- Initialize Orion Library
OrionLib:Init()
print("Orion Library initialized successfully!")
